# Install dependencies
FROM debian:latest AS build-env

ARG ZOOPLAAPIKEY
ENV GOOGLEMAPSAPIKEY=$GOOGLEMAPSAPIKEY
ENV ZOOPLAAPIKEY=$ZOOPLAAPIKEY

RUN apt-get update && \
    apt-get install -y curl git wget unzip libgconf-2-4 gdb libstdc++6 libglu1-mesa fonts-droid-fallback lib32stdc++6 python3 psmisc && \
    apt-get clean

# Clone the flutter repo
RUN git clone https://github.com/flutter/flutter.git /usr/local/flutter

# Set flutter path
ENV PATH="/usr/local/flutter/bin:/usr/local/flutter/bin/cache/dart-sdk/bin:${PATH}"

# Enable flutter web
RUN flutter channel beta && \
    flutter upgrade && \
    flutter config --enable-web && \
    flutter pub global activate webdev

# Run flutter doctor
RUN flutter doctor -v

COPY ./frontend/lib /usr/local/bin/app/lib
COPY ./frontend/web /usr/local/bin/app/web
COPY ./frontend/pubspec.lock /usr/local/bin/app/pubspec.lock
COPY ./frontend/pubspec.yaml /usr/local/bin/app/pubspec.yaml
COPY ./frontend/.metadata /usr/local/bin/app/.metadata
COPY ./frontend/flutter_server.sh /usr/local/bin/app/server/flutter_server.sh

# Set the working directory to the app files within the container
WORKDIR /usr/local/bin/app

RUN flutter build web --no-sound-null-safety --dart-define zoopla_api_key=${ZOOPLAAPIKEY}

EXPOSE 5001

# Set the server startup script as executable
RUN ["chmod", "+x", "/usr/local/bin/app/server/flutter_server.sh"]

# Start the web serverC
CMD [ "/usr/local/bin/app/server/flutter_server.sh" ]
